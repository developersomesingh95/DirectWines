name: Build and Deploy Staging

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest  # Use macOS runner for iOS

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Node.js environment with version 18
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      # Install dependencies
      - name: Install dependencies
        run: |
          npm install --legacy-peer-deps
          npm install -g react-native-cli

      # Install Ruby and Bundler
      - name: Install Ruby and Bundler
        run: |
          brew install ruby
          gem install bundler

      # Navigate to the directory where Gemfile.lock exists (if needed)
      - name: Navigate to the project directory (if required)
        run: |
          cd ios  # Assuming Gemfile.lock exists in the ios directory; change if necessary
          
      # Remove Gemfile.lock only if it exists in the correct directory
      - name: Remove Gemfile.lock if it exists
        run: |
          if [ -f Gemfile.lock ]; then rm Gemfile.lock; fi  # Check if Gemfile.lock exists before trying to remove it

      # Install gems from the Gemfile (with a fresh install)
      - name: Install gems with Bundler
        run: |
          bundle install --clean  # Ensure gems are installed and clean any old versions

      # Debug step: List installed gems to verify that fastlane is installed
      - name: List installed gems
        run: |
          gem list

      # Ensure CocoaPods is installed via Bundler
      - name: Install CocoaPods dependencies
        run: |
          cd ios
          bundle exec pod install  # Ensure pods are installed with Bundler

      # Set up Fastlane Match
      - name: Set up Fastlane Match
        run: |
          export MATCH_GIT_URL="git@github.com:developersomesingh95/DirectWines.git"  # Replace with your Git URL
          bundle exec fastlane match development --type development --git_url $MATCH_GIT_URL
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      # Run Fastlane Build (using Bundler to ensure correct version)
      - name: Run Fastlane Build
        run: |
          cd ios
          bundle exec fastlane ios beta  # Ensure correct version of Fastlane is used
